-- Create duplicate table with same structure as processed_sensor_readings
CREATE TABLE public.processed_sensor_readings_duplicate (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    original_id integer NOT NULL,
    recorded_at timestamp with time zone NOT NULL,
    temperature real,
    humidity real,
    pressure real,
    gas_resistance real,
    pm1_0 integer,
    pm2_5 integer,
    pm10 integer,
    accel_x real,
    accel_y real,
    accel_z real,
    accel_magnitude real,
    gyro_x real,
    gyro_y real,
    gyro_z real,
    gyro_magnitude real,
    anomaly_score real DEFAULT 0,
    predicted_failure_probability real DEFAULT 0,
    quality_score integer DEFAULT 100,
    processed_at timestamp with time zone DEFAULT now(),
    created_at timestamp with time zone DEFAULT now(),
    updated_at timestamp with time zone DEFAULT now(),
    location text DEFAULT 'hangar_01'::text,
    maintenance_recommendation text,
    processing_version text DEFAULT 'v1.0'::text
);

-- Copy all data from original table to duplicate
INSERT INTO public.processed_sensor_readings_duplicate (
    original_id,
    recorded_at,
    temperature,
    humidity,
    pressure,
    gas_resistance,
    pm1_0,
    pm2_5,
    pm10,
    accel_x,
    accel_y,
    accel_z,
    accel_magnitude,
    gyro_x,
    gyro_y,
    gyro_z,
    gyro_magnitude,
    anomaly_score,
    predicted_failure_probability,
    quality_score,
    processed_at,
    created_at,
    updated_at,
    location,
    maintenance_recommendation,
    processing_version
)
SELECT 
    original_id,
    recorded_at,
    temperature,
    humidity,
    pressure,
    gas_resistance,
    pm1_0,
    pm2_5,
    pm10,
    accel_x,
    accel_y,
    accel_z,
    accel_magnitude,
    gyro_x,
    gyro_y,
    gyro_z,
    gyro_magnitude,
    anomaly_score,
    predicted_failure_probability,
    quality_score,
    processed_at,
    created_at,
    updated_at,
    location,
    maintenance_recommendation,
    processing_version
FROM public.processed_sensor_readings;

-- Enable Row Level Security
ALTER TABLE public.processed_sensor_readings_duplicate ENABLE ROW LEVEL SECURITY;

-- Create RLS policies similar to original table
CREATE POLICY "Authenticated users can insert processed readings duplicate" 
ON public.processed_sensor_readings_duplicate 
FOR INSERT 
WITH CHECK (auth.uid() IS NOT NULL);

CREATE POLICY "Authenticated users can update processed readings duplicate" 
ON public.processed_sensor_readings_duplicate 
FOR UPDATE 
USING (auth.uid() IS NOT NULL);

CREATE POLICY "Users can view all processed sensor readings duplicate" 
ON public.processed_sensor_readings_duplicate 
FOR SELECT 
USING (true);